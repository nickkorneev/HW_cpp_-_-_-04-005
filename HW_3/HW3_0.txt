1)
 Когда нужно хранить информацию в отсортированном порядке. Множества и мультимножества отсортированы по значению.
 Отображения упорядочивают свои элементы по ключам, обеспечивая быстрый поиск по заданному ключу.

2)
 Хэш-функция должна быть детерминирована - одинаковый результат для одинаковых входных данных;
 ее скорость не должна зависеть от размера массива; она должна быть равномерна.

3)
 Коллизии возникают из-за недостаточно хорошо детерменированной или равномерной хэш-функции.
 Решаются коллизии двумя способами: метод цепочек - каждая ячейка становится списком,
 когда записываются элементы с одинаковым хэшем; метод открытой адресации - новый элемент,
 создавший коллизию, помещается в первую свободную ячейку.

4)
 В самом лучшем случае любая операция выполянется за константное время, т.к. элемент лежит в слоте,
 приписанном конкретному хэшу. Если существуют коллизии, то в данном слоте хранится некоторый список
 из элементов и для доступа к какому-то конкретному элементу придется пробежать этот список.

5)
 Boost.multiindex позволяет пользоваться различными интерфейсами над определенным набором данных для разных задач.
 В каком-то случае может быть удобен set, в каком-то vector, в другом hash.